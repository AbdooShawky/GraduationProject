@model Servicely.Models.Certificate

@{
    ViewBag.Title = "Create";
     if (Session["Layout"] != null)
    { Layout = Session["Layout"].ToString(); }

    else
    { Layout = "~/Views/Shared/_Layout.cshtml"; }
}

<h3>@Servicely.Languages.Language.Create</h3>
<div class="container">
    @using (Html.BeginForm())
    {
        <h4>@Servicely.Languages.Language.CertificateType</h4>
        <hr />
        <div class="row">
            <div class="col-md-3">
                <label>@Servicely.Languages.Language.CertificateNameEn</label>
                @Html.EditorFor(model => model.CirtificateTypeName, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = "(([A-Za-z\\s]){2,50})" } })
                @Html.ValidationMessageFor(model => model.CirtificateTypeName, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-1"></div>
            <div class="col-md-3">
                <label>@Servicely.Languages.Language.CertificateNameAr</label>
                @Html.EditorFor(model => model.CirtificateTypeNameArabic, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = "([\u0600-\u06FF\\s]{3,30})" } })
                @Html.ValidationMessageFor(model => model.CirtificateTypeNameArabic, "", new { @class = "text-danger" })

            </div>
        </div>


        <div class="form-group mt-4">
            @if (ViewBag.school != null)
            {
                <label class="mt-3 mb-3 text-danger"> @ViewBag.school</label>
            }
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Servicely.Languages.Language.Create" class="btn btn-default" />
            </div>
        </div>

    }

    <div>
        @Html.ActionLink(Servicely.Languages.Language.Back_to_List, "Index")
    </div>

    <div>

    </div>
</div>

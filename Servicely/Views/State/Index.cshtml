@model IEnumerable<Servicely.Models.State>

@{
    ViewBag.Title = "Index";
        if (Session["Layout"] != null)
    { Layout = Session["Layout"].ToString(); }

    else
    { Layout = "~/Views/Shared/_Layout.cshtml"; }
}

<script>

    $(function () {

       
        //create
        $.ajax({

            url: "/State/GetsuccessMessage",
            data: "",
            success: function (res) {

                if (res == "") {

                }
                else {
                    const Toast = Swal.mixin({


                        toast: true,

                        position: 'top',

                        showConfirmButton: false,

                        timer: 5000,
                        onOpen: (toast) => {

                            toast.addEventListener('mouseenter', Swal.stopTimer)

                            toast.addEventListener('mouseleave', Swal.resumeTimer)

                        }


                    });


                    Toast.fire({

                        type: 'success',


                        title: res


                    });
                }


            }

        });
        //Update
            $.ajax({

            url: "/State/GetUpdateMessage",
            data: "",
            success: function (res) {

                if (res == "") {

                }
                else {
                    const Toast = Swal.mixin({


                        toast: true,

                        position: 'top',

                        showConfirmButton: false,

                        timer: 5000,
                        onOpen: (toast) => {

                            toast.addEventListener('mouseenter', Swal.stopTimer)

                            toast.addEventListener('mouseleave', Swal.resumeTimer)

                        }


                    });


                    Toast.fire({

                        type: 'info',


                        title: res


                    });
                }


            }

            });
        //Delete
         $.ajax({

            url: "/State/GetDeletedMessage",
            data: "",
            success: function (res) {

                if (res == "") {

                }
                else {
                    const Toast = Swal.mixin({


                        toast: true,

                        position: 'top',

                        showConfirmButton: false,

                        timer: 5000,
                        onOpen: (toast) => {

                            toast.addEventListener('mouseenter', Swal.stopTimer)

                            toast.addEventListener('mouseleave', Swal.resumeTimer)

                        }


                    });


                    Toast.fire({

                        type: 'warning',


                        title: res


                    });
                }


            }

        });

    });
</script>

<div class="container-fluid">
    <h2>@Servicely.Languages.Language.States</h2>
    <p>
        @Html.ActionLink(Servicely.Languages.Language.Create_New, "Create")
    </p>

    <div class="row">
        <div class="col-12">
            <table class="table">
                <tr>
                    <th class="font-weight-bold">
                        @Servicely.Languages.Language.State_Code
                    </th>

                    <th class="font-weight-bold">
                        @Servicely.Languages.Language.State_Name
                    </th>

                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.state_code)
                        </td>

                        @if (Session["lang"] != null)
                        {
                            if (Session["lang"].ToString().Equals("ar-EG"))
                            {

                                <td>
                                    @Html.DisplayFor(modelItem => item.state_arabic_name)
                                </td>



                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.state_name)
                                </td>


                            }
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.state_name)
                            </td>

                        }


                        <td>

                            @Html.ActionLink(Servicely.Languages.Language.Edit, "Edit", new { id = item.state_id }, htmlAttributes: new { style = "color:blue" }) |
                            @Html.ActionLink(Servicely.Languages.Language.Delete, "Delete", new { id = item.state_id }, htmlAttributes: new { style = "color:blue" })
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>



</div>
<div id="draggable" class="ui-widget-content">
    <p>Drag me around</p>
</div>
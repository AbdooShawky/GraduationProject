@model Servicely.Models.Address

@{
    ViewBag.Title = @Servicely.Languages.Language.Create;
    if (Session["Layout"] != null)
    {
        Layout = Session["Layout"].ToString(); }

    else
    { Layout = "~/Views/Shared/_Layout.cshtml"; }
}
<script src="~/scripts/jquery-3.4.1.js"></script>
@*<link href="~/css/bootstrap.css" rel="stylesheet" />*@

<script src="~/js/bootstrap.js"></script>
<link href="~/Content/bootstrap-select.css" rel="stylesheet" />
<script src="~/scripts/bootstrap-select.js"></script>
<script>






    $(document).ready(function () {

        $("#NId").change(function () {

            var data = $("#NId").val();
            $("#tb").empty();
            $.ajax({
                url: "/Citizen/GetNamesByCitizenId",
                data: { ctId: data },
                success: function (res) {
                    $.each(res, function (i, r) {


                        $("#tb").append("<tr > <td class='font-weight-bold'>" + r.citizen_first_name + " " + r.citizen_second_name + " " + r.citizen_third_name + " " + r.citizen_fourth_name + " </td> </tr>");

                    });

                }

            });

        });



        $("#div1").hide();
        $("#div2").hide();

        $("#State").change(function () {
            var data = $("#State").val();
            $("#city").empty();
            $.ajax({
                url: "/Addresses/GetCitiesByStateId",
                data: { stateId: data },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#city").append("<option value='" + row.city_id + "'> " + row.city_name + " </option>");
                    });



                }



            });


            var sid = $("#City").val();
            var ss = $("#city").val();
            $("#region").empty();
            $("#district").empty();

            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");

                    });
                }


            });

        });



        $("#city").change(function () {
            var ss = $("#city").val();
            $("#region").empty();
            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

            $("#region").empty();
            $("#district").empty();

            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");

                    });
                }


            });
        });

        $("#region").change(function () {
            var data = $("#region").val();
            $("#district").empty();
            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");

                    });
                }


            });



        });


        $("#NId").prop('class', 'selectpicker');
        $("#NId").attr('data-live-search', true);

        $("#defaultInline3").click(function () {

            $("#div2").show();
            $("#div1").show();


        });
        $("#defaultInline2").click(function () {

            $("#div2").hide();
            $("#div1").hide();


        });
        $("#defaultInline1").click(function () {

            $("#div2").hide();
            $("#div1").hide();


        });


    });



    $("#NId").selectpicker();

</script>
<h2> @Servicely.Languages.Language.Create</h2>

@using (Html.BeginForm())
{


    <div class="form-horizontal">
        <h4> @Servicely.Languages.Language.Address</h4>
        <hr />
        <div class="container-fluid">

            <div class=" row">
                <div class="col-md-4 ">
                    <label class="label"> @Servicely.Languages.Language.National_Id</label>
                    @Html.DropDownList("NId", null, "", new { @class = "selectpicker", required = "required" })


                </div>

                <div class="col-md-4 col-sm-12">
                    <table id="tb" class="mt-4">
                    </table>
                </div>

            </div>

        </div>
        <div class="container-fluid">
            <div class="col-md-4 mt-2 ">

                <!-- Default inline 1-->
                <div class="custom-control custom-radio custom-control-inline">
                    <input type="radio" class="custom-control-input" id="defaultInline1" name="inlineDefaultRadiosExample" value="WithF" checked="checked">
                    <label class="custom-control-label" for="defaultInline1"> @Servicely.Languages.Language.With_Father</label>
                </div>

                <!-- Default inline 2-->
                <div class="custom-control custom-radio custom-control-inline">
                    <input type="radio" class="custom-control-input" id="defaultInline2" name="inlineDefaultRadiosExample" value="WithM">
                    <label class="custom-control-label" for="defaultInline2"> @Servicely.Languages.Language.With_Mother</label>
                </div>

                <!-- Default inline 3-->
                <div class="custom-control custom-radio custom-control-inline">
                    <input type="radio" class="custom-control-input" id="defaultInline3" name="inlineDefaultRadiosExample" value="other">
                    <label class="custom-control-label" for="defaultInline3"> @Servicely.Languages.Language.Other</label>
                </div>





            </div>
        </div>
        <div class="container" id="div1">


            <div class="row">
                <div class="col-md-2 mt-3">
                    <label class="label">  @Servicely.Languages.Language.State</label>
                    @Html.DropDownList("State", null, "", htmlAttributes: new { @class = "form-control" })


                </div>
                <div class="col-md-3 mt-3">
                    <label class="label"> @Servicely.Languages.Language.City</label>
                    <select class="form-control" id="city"></select>
                </div>
                <div class="col-md-3 mt-3">
                    <label class="label">@Servicely.Languages.Language.Region</label>
                    <select class="form-control" id="region" name="district_region_id"></select>


                </div>

                <div class="col-md-3 mt-3">
                    <label class="label">@Servicely.Languages.Language.District</label>
                    <select class="form-control" id="district" name="address_district_id">
                    </select>


                </div>




            </div>



        </div>

        <div class="container" id="div2">
            <div class="row">

                <div class="col-md-3">
                    <label class="label">@Servicely.Languages.Language.Street_Name</label>
                    @Html.EditorFor(model => model.address_street, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-md-3">
                    <label class="label">@Servicely.Languages.Language.ArabicStreetName</label>
                    @Html.EditorFor(model => model.address_street_arabic, new { htmlAttributes = new { @class = "form-control" } })
                </div>

            </div>

        </div>

    </div>







    @*<div class="form-group">
            @Html.LabelFor(model => model.address_district_id, "address_district_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("address_district_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.address_district_id, "", new { @class = "text-danger" })
            </div>
        </div>*@







    @*<div class="form-group">
            @Html.LabelFor(model => model.address_isCurrent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.address_isCurrent)
                </div>
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.address_isBirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.address_isBirthPlace)
                    @Html.ValidationMessageFor(model => model.address_isBirthPlace, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address_street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address_street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address_street, "", new { @class = "text-danger" })
            </div>
        </div>*@



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 mt-3">
            <input type="submit" value=@Servicely.Languages.Language.Create class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink(Servicely.Languages.Language.Back_to_List, "Index")
</div>

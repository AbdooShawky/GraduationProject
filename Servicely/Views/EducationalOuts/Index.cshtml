@model IEnumerable<Servicely.Models.EducationalOut>

@{
    ViewBag.Title = "Index";
     if (Session["Layout"] != null)
    { Layout = Session["Layout"].ToString(); }

    else
    { Layout = "~/Views/Shared/_Layout.cshtml"; }
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CitizenId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsGraduatedP)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsGraduatedS)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsGraduatedI)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DocumentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Is_Deleted)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CitizenId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsGraduatedP)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsGraduatedS)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsGraduatedI)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DocumentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Is_Deleted)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

@model Servicely.Models.Address

@{
    ViewBag.Title = Servicely.Languages.Language.Edit;
      if (Session["Layout"] != null)
    { Layout = Session["Layout"].ToString(); }

    else
    { Layout = "~/Views/Shared/_Layout.cshtml"; }
}

    <h2> @Servicely.Languages.Language.Edit</h2>
<script>

    $(function () {

                var seesion;
        $.ajax({
            url: "/Addresses/Sessionvalue",
            data: "",
            async:false,
            success: function (res) {
                 
                seesion = res;

            }
        });

        
        if (seesion == "ar-EG") {


            $("#State").change(function () {
            var data = $("#State").val();
            $("#city").empty();
            $.ajax({
                url: "/Addresses/GetCitiesByStateId",
                data: { stateId: data },

                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#city").append("<option value='" + row.city_id + "'> " + row.city_arabic_name + " </option>");
                    });

                    

                }
            


            });


            var sid = $("#City").val();
            var ss = $("#city").val();
            $("#region").empty();
            $("#district").empty();

            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_arabic_name + " </option>");
                    });

                }
            });

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                async: false,
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_arabic_name + " </option>");

                    });
                }


            });

            });


       
        $("#city").change(function () {
            var ss = $("#city").val();
            $("#region").empty();
            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_arabic_name + " </option>");
                    });

                }
            });

             $("#region").empty();
            $("#district").empty();

            

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                async: false,
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_arabic_name + " </option>");

                    });
                }


            });
        });

        $("#region").change(function () {
            var data = $("#region").val();
            $("#district").empty();
            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                async: false,
                success: function (res) {

                    $.each(res, function (i, r) {
                       
                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_arabic_name + " </option>");
                       
                    });
                }


            });

            

        });




        }
        else {

            $("#State").change(function () {
            var data = $("#State").val();
            $("#city").empty();
            $.ajax({
                url: "/Addresses/GetCitiesByStateId",
                data: { stateId: data },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#city").append("<option value='" + row.city_id + "'> " + row.city_name + " </option>");
                    });

                    

                }
            


            });


            var sid = $("#City").val();
            var ss = $("#city").val();
            $("#region").empty();
            $("#district").empty();

            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");

                    });
                }


            });

            });


       
        $("#city").change(function () {
            var ss = $("#city").val();
            $("#region").empty();
            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

             $("#region").empty();
            $("#district").empty();

            $.ajax({
                url: "/Addresses/GetRegionByCityId",
                data: { CityId: ss },
                async: false,
                success: function (res) {
                    $.each(res, function (i, row) {

                        $("#region").append("<option value='" + row.region_id + "'> " + row.region_name + " </option>");
                    });

                }
            });

            var data = $("#region").val();

            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {

                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");

                    });
                }


            });
        });

        $("#region").change(function () {
            var data = $("#region").val();
            $("#district").empty();
            $.ajax({
                url: "/Addresses/GetDistrictByRegionId",
                data: { rId: data },
                success: function (res) {

                    $.each(res, function (i, r) {
                       
                        $("#district").append("<option value='" + r.district_id + "'>  " + r.district_name + " </option>");
                       
                    });
                }


            });

            

        });
        }

    });


</script>

    
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>@Servicely.Languages.Language.Address</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.address_id)
        <div class="row mt-3">

                
                    <div class="col-3 mt-3">
                        <label class="label">@Servicely.Languages.Language.State</label>
                        @Html.DropDownList("State", null, "", htmlAttributes: new { @class = "form-control" , required="required" })


                    </div>
                    <div class="col-3 mt-3">
                        <label class="label">@Servicely.Languages.Language.City</label>
                        <select class="form-control" id="city"></select>
                    </div>
                    <div class="col-3 mt-3">
                        <label class="label">@Servicely.Languages.Language.Region</label>
                        <select class="form-control" id="region" name="district_region_id"></select>


                    </div>

                    <div class="col-3 mt-3">
                        <label class="label">@Servicely.Languages.Language.District</label>
                        <select class="form-control" id="district" name="address_district_id">
                        </select>


                    </div>




        </div>
        <div class="row mt-3">
            <div class="col-md-3">
                <label class="label"> @Servicely.Languages.Language.Street_Name</label>
                @Html.EditorFor(model => model.address_street, new { htmlAttributes = new { @class = "form-control",required="required" }, pattern = "[a-zA-Z\\s]{2,20}" })
                @Html.ValidationMessageFor(model => model.address_street, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mt-3">

            <div class="col-md-3">
                <label class="label">
                    @Servicely.Languages.Language.ArabicStreetName
                    </label>

                    @Html.EditorFor(model => model.address_street_arabic, new { htmlAttributes = new { @class = "form-control", required = "required", pattern = "[\u0600-\u06FF\\s]{2,20}" } })
                    @Html.ValidationMessageFor(model => model.address_street_arabic, "", new { @class = "text-danger" })
</div>
        </div>
        <div class="row mt-3">

            <div class="col-md-3">
                <label class="label">
                    @Servicely.Languages.Language.Is_Current
                    </label>
                    <div class="checkbox">


                        @if (Model.address_isCurrent == true)
                        {
                            <input type="hidden" name="iscurrent" value="true"/>
                            @Html.EditorFor(model => model.address_isCurrent, new { htmlAttributes = new {   @checked="checked" } })
                            @Html.ValidationMessageFor(model => model.address_isCurrent, "", new { @class = "text-danger" })

                        }
                        else
                        {
                            @Html.EditorFor(model => model.address_isCurrent)
                            @Html.ValidationMessageFor(model => model.address_isCurrent, "", new { @class = "text-danger" })

                        }

                    </div>
</div>
        </div>

        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Servicely.Languages.Language.Save class="btn btn-default" />
            </div>
        </div>
  
    

 

    

    
        
           
    
        


    
       
    
 
  

   

}
</div>
<div>
    @Html.ActionLink( Servicely.Languages.Language.Back_to_List, "Index")
</div>
